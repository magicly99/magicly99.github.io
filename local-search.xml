<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/01/31/Java%E5%AD%A6%E4%B9%A0/1%20Java%E5%9F%BA%E7%A1%80%E4%B8%8A/"/>
    <url>/2024/01/31/Java%E5%AD%A6%E4%B9%A0/1%20Java%E5%9F%BA%E7%A1%80%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Java语言的特点"><a href="#1-Java语言的特点" class="headerlink" title="1. Java语言的特点"></a>1. Java语言的特点</h2><p>面向对象</p><p>平台无关性</p><p>支持多线程</p><p>可靠性等</p><h2 id="1-JavaSE和JavaEE"><a href="#1-JavaSE和JavaEE" class="headerlink" title="1. JavaSE和JavaEE"></a>1. JavaSE和JavaEE</h2><p>JavaSE包含运行Java程序的核心基础类库和虚拟机等</p><p>JavaEE包含企业级应用程序的部署和开发规范</p><p>简单来说，JavaSE是基础版本，JavaEE是高级版本，前者适合开发简单的桌面程序，后者适合开发复杂的企业级应用程序。</p><h2 id="2-JVM-amp-JRE-amp-JDK"><a href="#2-JVM-amp-JRE-amp-JDK" class="headerlink" title="2. JVM&amp;JRE&amp;JDK"></a>2. JVM&amp;JRE&amp;JDK</h2><h3 id="2-1-JVM"><a href="#2-1-JVM" class="headerlink" title="2.1. JVM"></a>2.1. JVM</h3><p>Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。</p><h3 id="2-2-JRE"><a href="#2-2-JRE" class="headerlink" title="2.2. JRE"></a>2.2. JRE</h3><p>JDK（Java Development Kit），它是功能齐全的 Java SDK，是提供给开发者使用，能够创建和编译 Java 程序的开发套件。它包含了 JRE，同时还包含了编译 java 源码的编译器 javac 以及一些其他工具比如 javadoc（文档注释工具）、jdb（调试器）、jconsole（基于 JMX 的可视化监控⼯具）、javap（反编译工具）等等。</p><hr><p>JRE（Java Runtime Environment） 是 Java 运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，主要包括 Java 虚拟机（JVM）、Java 基础类库（Class Library）。</p><hr><p>不过，从 JDK 9 开始，就不需要区分 JDK 和 JRE 的关系了，取而代之的是模块系统（JDK 被重新组织成 94 个模块）+ <a href="http://openjdk.java.net/jeps/282">jlinkopen in new window</a> 工具 (随 Java 9 一起发布的新命令行工具，用于生成自定义 Java 运行时映像，该映像仅包含给定应用程序所需的模块) 。并且，从 JDK 11 开始，Oracle 不再提供单独的 JRE 下载。</p><h4 id="2-2-1-总结"><a href="#2-2-1-总结" class="headerlink" title="2.2.1. 总结"></a>2.2.1. 总结</h4><p>JVM是什么？作用？</p><p>JDK是什么包含什么？JRE是什么？包含什么？</p><p>JDK9特性，JDK11特性</p><h3 id="2-3-什么是字节码？采用字节码的好处"><a href="#2-3-什么是字节码？采用字节码的好处" class="headerlink" title="2.3. 什么是字节码？采用字节码的好处"></a>2.3. 什么是字节码？采用字节码的好处</h3><p>在 Java 中，JVM 可以理解的代码就叫做字节码（即扩展名为 .class 的文件），它不面向任何特定的处理器，只面向虚拟机。不针对特定的机器，相同的字节码可以在不同操作系统直接运行而无需重新编译，Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。</p><h3 id="2-4-Java程序变为机器码的过程"><a href="#2-4-Java程序变为机器码的过程" class="headerlink" title="2.4. Java程序变为机器码的过程"></a>2.4. Java程序变为机器码的过程</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40717099/1706602968405-de028ce1-2318-4cf8-8abf-74a78a7f67d8.png"></p><p>在这一步 JVM 类加载器首先加载字节码文件，然后通过解释器逐行解释执行，这种方式的执行速度会相对比较慢。而且，有些方法和代码块是经常需要被调用的(也就是所谓的热点代码)，所以后面引进了 <strong>JIT（Just in Time Compilation）</strong> 编译器，而 JIT 属于运行时编译。当 JIT 编译器完成第一次编译后，其会将字节码对应的机器码保存下来，下次可以直接使用。</p><p>HotSpot 采用了惰性评估(Lazy Evaluation)的做法，根据二八定律，消耗大部分系统资源的只有那一小部分的代码（热点代码），而这也就是 JIT 所需要编译的部分。JVM 会根据代码每次被执行的情况收集信息并相应地做出一些优化，因此执行的次数越多，它的速度就越快。</p><hr><h3 id="2-5-为什么说Java解释和编译并存"><a href="#2-5-为什么说Java解释和编译并存" class="headerlink" title="2.5. 为什么说Java解释和编译并存"></a>2.5. 为什么说Java解释和编译并存</h3><p>这是因为 Java 语言既具有编译型语言的特征，也具有解释型语言的特征。因为 Java 程序要经过先编译，后解释两个步骤，由 Java 编写的程序需要先经过编译步骤，生成字节码（.class 文件），这种字节码必须由 Java 解释器来解释执行。</p><hr><h2 id="3-基本数据类型"><a href="#3-基本数据类型" class="headerlink" title="3. 基本数据类型"></a>3. 基本数据类型</h2><p>所占字节数</p><p>数字类型：byte，short，int，long（1，2，4，8）</p><p>float double 4 8</p><p>char 2byte</p><p>boolean 1bit</p><h3 id="3-1-包装类和基本类的区别"><a href="#3-1-包装类和基本类的区别" class="headerlink" title="3.1. 包装类和基本类的区别"></a>3.1. 包装类和基本类的区别</h3><p><strong>存储方式</strong>：基本数据类型的局部变量存放在 Java 虚拟机栈中的局部变量表中，基本数据类型的成员变量（未被 static 修饰 ）存放在 Java 虚拟机的堆中。包装类型属于对象类型，我们知道几乎所有对象实例都存在于堆中</p><p>比较方式：对于基本数据类型来说，&#x3D;&#x3D; 比较的是值。对于包装数据类型来说，&#x3D;&#x3D; 比较的是对象的内存地址。所有整型包装类对象之间值的比较，全部使用 equals() 方法。</p><p><strong>默认值：null</strong></p><p><strong>为什么说是几乎所有对象实例都存在于堆中呢？</strong> 这是因为 HotSpot 虚拟机引入了 JIT 优化之后，会对对象进行逃逸分析，如果发现某一个对象并没有逃逸到方法外部，那么就可能通过标量替换来实现栈上分配，而避免堆上分配内存</p><h3 id="3-2-包装类的缓存机制"><a href="#3-2-包装类的缓存机制" class="headerlink" title="3.2. 包装类的缓存机制"></a>3.2. 包装类的缓存机制</h3><p>Java 基本数据类型的包装类型的大部分都用到了缓存机制来提升性能。</p><p>Byte,Short,Integer,Long 这 4 种包装类默认创建了数值 <strong>[-128，127]</strong> 的相应类型的缓存数据，Character 创建了数值在 <strong>[0,127]</strong> 范围的缓存数据，Boolean 直接返回 True or False。</p><p>记住：<strong>所有整型包装类对象之间值的比较，全部使用 equals 方法比较</strong>。</p><hr><h3 id="3-3-自动装箱与拆箱了解吗？原理是什么？"><a href="#3-3-自动装箱与拆箱了解吗？原理是什么？" class="headerlink" title="3.3. 自动装箱与拆箱了解吗？原理是什么？"></a>3.3. 自动装箱与拆箱了解吗？原理是什么？</h3><p>什么是自动拆装箱？</p><ul><li>装箱：将基本类型用它们对应的引用类型包装起来；</li><li>拆箱：将包装类型转换为基本数据类型；</li></ul><p>Integer i &#x3D; 10 等价于 Integer i &#x3D; Integer.valueOf(10)</p><p>int n &#x3D; i 等价于 int n &#x3D; i.intValue();</p><h3 id="3-4-为何浮点类型有精度丢失的风险？怎么解决？"><a href="#3-4-为何浮点类型有精度丢失的风险？怎么解决？" class="headerlink" title="3.4. 为何浮点类型有精度丢失的风险？怎么解决？"></a>3.4. 为何浮点类型有精度丢失的风险？怎么解决？</h3><p>我们知道计算机是二进制的，而且计算机在表示一个数字时，宽度是有限的，无限循环的小数存储在计算机时，只能被截断，所以就会导致小数精度发生损失的情况。这也就是解释了为什么浮点数没有办法用二进制精确表示。</p><p>BigDecimal 可以实现对浮点数的运算，不会造成精度丢失。通常情况下，大部分需要浮点数精确运算结果的业务场景（比如涉及到钱的场景）都是通过 BigDecimal 来做的。</p><h3 id="3-5-超过long类型的如何表示？"><a href="#3-5-超过long类型的如何表示？" class="headerlink" title="3.5. 超过long类型的如何表示？"></a>3.5. 超过long类型的如何表示？</h3><p>BigInteger 内部使用 int[] 数组来存储任意大小的整形数据。</p><p>相对于常规整数类型的运算来说，BigInteger 运算的效率会相对较低。</p><h3 id="3-6-移位运算"><a href="#3-6-移位运算" class="headerlink" title="3.6. 移位运算"></a>3.6. 移位运算</h3><p>负数的二进制表示</p><p>先绝对值进行求二进制</p><p>然后求反码</p><p>然后求补码</p><p>三种</p><ul><li>&lt;&lt; :左移运算符，向左移若干位，高位丢弃，低位补零。x &lt;&lt; 1,相当于 x 乘以 2(不溢出的情况下)。</li><li><blockquote><blockquote><p>:带符号右移，向右移若干位，高位补符号位，低位丢弃。正数高位补 0,负数高位补 1。x &gt;&gt; 1,相当于 x 除以 2。</p></blockquote></blockquote></li><li><blockquote><blockquote><blockquote><p>:无符号右移，忽略符号位，空位都以 0 补齐。</p></blockquote></blockquote></blockquote></li></ul><hr><p>由于 double，float 在二进制中的表现比较特殊，因此不能来进行移位操作。</p><p>移位操作符实际上支持的类型只有int和long，编译器在对short、byte、char类型进行移位前，都会将其转换为int类型再操作。</p><p>当 int 类型左移&#x2F;右移位数大于等于 32 位操作时，会先求余（%）后再进行左移&#x2F;右移操作</p><p>也就是说：x&lt;&lt;42等同于x&lt;&lt;10，x&gt;&gt;42等同于x&gt;&gt;10，x &gt;&gt;&gt;42等同于x &gt;&gt;&gt; 10。</p><hr><h2 id="4-变量"><a href="#4-变量" class="headerlink" title="4. 变量"></a>4. 变量</h2><h3 id="4-1-成员变量和局部变量"><a href="#4-1-成员变量和局部变量" class="headerlink" title="4.1. 成员变量和局部变量"></a>4.1. 成员变量和局部变量</h3><ul><li><strong>语法形式</strong>：从语法形式上看，成员变量是属于类的，而局部变量是在代码块或方法中定义的变量或是方法的参数；成员变量可以被 public,private,static 等修饰符所修饰，而局部变量不能被访问控制修饰符及 static 所修饰；但是，成员变量和局部变量都能被 final 所修饰。</li><li><strong>存储方式</strong>：从变量在内存中的存储方式来看，如果成员变量是使用 static 修饰的，那么这个成员变量是属于类的，如果没有使用 static 修饰，这个成员变量是属于实例的。而对象存在于堆内存，局部变量则存在于栈内存。</li><li><strong>生存时间</strong>：从变量在内存中的生存时间上看，成员变量是对象的一部分，它随着对象的创建而存在，而局部变量随着方法的调用而自动生成，随着方法的调用结束而消亡。</li><li><strong>默认值</strong>：从变量是否有默认值来看，成员变量如果没有被赋初始值，则会自动以类型的默认值而赋值（一种情况例外:被 final 修饰的成员变量也必须显式地赋值），而局部变量则不会自动赋值。</li></ul><hr><h3 id="4-2-静态变量"><a href="#4-2-静态变量" class="headerlink" title="4.2. 静态变量"></a>4.2. 静态变量</h3><p>静态变量也就是被 static 关键字修饰的变量。它可以被类的所有实例共享，无论一个类创建了多少个对象，它们都共享同一份静态变量。也就是说，静态变量只会被分配一次内存，即使创建多个对象，这样可以节省内存。</p><hr><h3 id="4-3-字符串和字符型"><a href="#4-3-字符串和字符型" class="headerlink" title="4.3. 字符串和字符型"></a>4.3. 字符串和字符型</h3><ul><li><strong>形式</strong> : 字符常量是单引号引起的一个字符，字符串常量是双引号引起的 0 个或若干个字符。</li><li><strong>含义</strong> : 字符常量相当于一个整型值( ASCII 值),可以参加表达式运算; 字符串常量代表一个地址值(该字符串在内存中存放位置)。</li><li><strong>占内存大小</strong>：字符常量只占 2 个字节; 字符串常量占若干个字节。</li></ul><hr><h2 id="5-方法"><a href="#5-方法" class="headerlink" title="5. 方法"></a>5. 方法</h2><h3 id="5-1-静态方法为何不能调用非静态成员"><a href="#5-1-静态方法为何不能调用非静态成员" class="headerlink" title="5.1. 静态方法为何不能调用非静态成员"></a>5.1. 静态方法为何不能调用非静态成员</h3><ul><li>静态方法是属于类的，在类加载的时候就会分配内存，可以通过类名直接访问。而非静态成员属于实例对象，只有在对象实例化之后才存在，需要通过类的实例对象去访问。</li><li>在类的非静态成员不存在的时候静态方法就已经存在了，此时调用在内存中还不存在的非静态成员，属于非法操作。</li></ul><hr><h3 id="5-2-重写和重载"><a href="#5-2-重写和重载" class="headerlink" title="5.2. 重写和重载"></a>5.2. 重写和重载</h3><p>重载就是同样的一个方法能够根据输入数据的不同，做出不同的处理</p><p>重写就是当子类继承自父类的相同方法，输入数据一样，但要做出有别于父类的响应时，你就要覆盖父类方法</p><p>重写发生在运行期，是子类对父类的允许访问的方法的实现过程进行重新编写。</p><ol><li>方法名、参数列表必须相同，子类方法返回值类型应比父类方法返回值类型更小或相等，抛出的异常范围小于等于父类，访问修饰符范围大于等于父类。</li><li>如果父类方法访问修饰符为 private&#x2F;final&#x2F;static 则子类就不能重写该方法，但是被 static 修饰的方法能够被再次声明。</li><li>构造方法无法被重写</li></ol><hr><h3 id="5-3-可变参数"><a href="#5-3-可变参数" class="headerlink" title="5.3. 可变参数"></a>5.3. 可变参数</h3><p>只能有一个，出现在末尾。</p>]]></content>
    
    
    <categories>
      
      <category>Java学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>动态规划</title>
    <link href="/2024/01/31/%E5%88%B7%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <url>/2024/01/31/%E5%88%B7%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<p>特点：</p><ul><li>连续性，一个状态是由上一个状态进行推导</li><li>重复性，解决重复子问题</li></ul><h2 id="1-DP五个步骤"><a href="#1-DP五个步骤" class="headerlink" title="1. DP五个步骤"></a>1. DP五个步骤</h2><ol><li>确定dp数组（dp table）以及下标的含义</li><li>确定递推公式</li><li>dp数组如何初始化</li><li>确定遍历顺序</li><li>举例推导dp数组</li></ol><h2 id="2-遇到问题"><a href="#2-遇到问题" class="headerlink" title="2. 遇到问题"></a>2. 遇到问题</h2><ul><li>这道题目我举例推导状态转移公式了么？</li><li>我打印dp数组的日志了么？</li><li>打印出来了dp数组和我想的一样么？</li></ul><h2 id="3-01背包"><a href="#3-01背包" class="headerlink" title="3. 01背包"></a>3. 01背包</h2><p>问题：解决选择规定的容量下得到最大的价值</p><p>重点：dp的理解0-i上容量为j的最大价值</p><ul><li>解决分成两个相同部分的可行性</li><li>解决两个部分之差最小</li></ul><h3 id="3-1-一维如何遍历-x2F-二维如何遍历"><a href="#3-1-一维如何遍历-x2F-二维如何遍历" class="headerlink" title="3.1. 一维如何遍历&#x2F;二维如何遍历"></a>3.1. 一维如何遍历&#x2F;二维如何遍历</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs inform7">for(int i = 1; i &lt; weight.size(); i++) &#123; // 遍历物品<br>    for(int j = 0; j &lt;= bagweight; j++) &#123; // 遍历背包容量<br>        if (j &lt; weight<span class="hljs-comment">[i]</span>) dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = dp<span class="hljs-comment">[i - 1]</span><span class="hljs-comment">[j]</span>;<br>        else dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = max(dp<span class="hljs-comment">[i - 1]</span><span class="hljs-comment">[j]</span>, dp<span class="hljs-comment">[i - 1]</span><span class="hljs-comment">[j - weight<span class="hljs-comment">[i]</span>]</span> + value<span class="hljs-comment">[i]</span>);<br><br>    &#125;<br>&#125;<br>for(int i = 0; i &lt; weight.size(); i++) &#123; // 遍历物品<br>    for(int j = bagWeight; j &gt;= weight<span class="hljs-comment">[i]</span>; j--) &#123; // 遍历背包容量<br>        dp<span class="hljs-comment">[j]</span> = max(dp<span class="hljs-comment">[j]</span>, dp<span class="hljs-comment">[j - weight<span class="hljs-comment">[i]</span>]</span> + value<span class="hljs-comment">[i]</span>);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-2-一维顺序和二维顺序的特点"><a href="#3-2-一维顺序和二维顺序的特点" class="headerlink" title="3.2. 一维顺序和二维顺序的特点"></a>3.2. 一维顺序和二维顺序的特点</h3><p>二维内外层可以互换，因为当前的状态更加左上角的状态得到，无论是先遍历物品，还是先遍历容量都能先得到左上角的状态。</p><p>一维内外层不能互换，一维是根据上一轮的状态来推断这一轮的状态，是递进的，每一轮的状态是根据遍历物品来得到的。</p><h3 id="3-3-为何使用倒序，什么时候使用顺序，为什么？"><a href="#3-3-为何使用倒序，什么时候使用顺序，为什么？" class="headerlink" title="3.3. 为何使用倒序，什么时候使用顺序，为什么？"></a>3.3. 为何使用倒序，什么时候使用顺序，为什么？</h3><p>背包的状态根据前面的状态获取。</p><p>倒序会使得后面的状态改变不影响前面的状态，基于上一轮的基础上进行推断，也就是没有算当前物品的基础上进行推断。</p><p>顺序会使前面的状态的改变影响到后面的状态，使得基于这一轮的结果基础上进行推断，也就是基于已经算上当前物品的基础上进行推断。</p><h2 id="4-几种公式"><a href="#4-几种公式" class="headerlink" title="4. 几种公式"></a>4. 几种公式</h2><p><strong>求装满背包有几种方法，公式都是：dp[j] +&#x3D; dp[j - nums[i]];</strong></p><h2 id="5-题目"><a href="#5-题目" class="headerlink" title="5. 题目"></a>5. 题目</h2><h3 id="5-1-动规第一周"><a href="#5-1-动规第一周" class="headerlink" title="5.1. 动规第一周"></a>5.1. 动规第一周</h3><ul><li>斐波那契</li><li>爬楼有多少种</li><li>爬楼最少消费</li></ul><h3 id="5-2-不同路径"><a href="#5-2-不同路径" class="headerlink" title="5.2. 不同路径"></a>5.2. 不同路径</h3><p>机器人的行走</p><p>按照步骤一步一步分析</p><h3 id="5-3-不同的二叉搜索树"><a href="#5-3-不同的二叉搜索树" class="headerlink" title="5.3. 不同的二叉搜索树"></a>5.3. 不同的二叉搜索树</h3><h3 id="5-4-凑零钱"><a href="#5-4-凑零钱" class="headerlink" title="5.4. 凑零钱"></a>5.4. 凑零钱</h3><p>找零钱的种数</p><ol><li>组合，外物品内容量</li><li>排列，外容量内物品</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40717099/1706671747260-bcc3b01b-93d0-4519-9c16-fbe8c8972c46.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40717099/1706675142300-a59d83b9-3837-45dc-8213-d1a0462ce24f.png"></p>]]></content>
    
    
    <categories>
      
      <category>刷题</category>
      
      <category>动态规划</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/08/01/%E9%A1%B9%E7%9B%AE/Tic-tac-toe/cpp%E7%BC%96%E5%86%99%E4%BA%95%E5%AD%97%E6%A3%8B/"/>
    <url>/2023/08/01/%E9%A1%B9%E7%9B%AE/Tic-tac-toe/cpp%E7%BC%96%E5%86%99%E4%BA%95%E5%AD%97%E6%A3%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="cpp编写井字棋"><a href="#cpp编写井字棋" class="headerlink" title="cpp编写井字棋"></a>cpp编写井字棋</h1><p>纯属是自娱自乐，写的很一般</p><p>思路：</p><p>棋盘类：</p><p>private</p><p>3*3的数组表示棋盘，有三种元素能填</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&#x27; &#x27;</span><br><span class="hljs-string">&#x27;o&#x27;</span><br><span class="hljs-string">&#x27;x&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// chessboard</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">chessboard</span><br>&#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-type">int</span>                  count;   <span class="hljs-comment">// count the filled space</span><br>    vector&lt;vector&lt;<span class="hljs-type">char</span>&gt;&gt; board;   <span class="hljs-comment">// board</span><br><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">chessboard</span>();<br>    ~<span class="hljs-built_in">chessboard</span>();<br>    <span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">input</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span></span>;<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isWin</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span></span>;   <span class="hljs-comment">// who win</span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">show</span><span class="hljs-params">()</span> <span class="hljs-type">const</span></span>;          <span class="hljs-comment">// show the current board</span><br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>06_variable</title>
    <link href="/2023/07/29/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/06_variable/"/>
    <url>/2023/07/29/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/06_variable/</url>
    
    <content type="html"><![CDATA[<h1 id="06-variable"><a href="#06-variable" class="headerlink" title="06_variable"></a>06_variable</h1><p>实现变量的声明和赋值</p><p>1、建立了一个符号表（暂时不知道有什么意图）</p><p>2、scan里面加入一些新的token，int和equals</p><p>3、statement里面写新的语法</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>a compiler writing journey</title>
    <link href="/2023/07/29/%E6%95%99%E7%A8%8B/%E5%81%A5%E8%BA%AB%E7%A2%8E%E7%A2%8E/"/>
    <url>/2023/07/29/%E6%95%99%E7%A8%8B/%E5%81%A5%E8%BA%AB%E7%A2%8E%E7%A2%8E/</url>
    
    <content type="html"><![CDATA[<h1 id="健身碎碎"><a href="#健身碎碎" class="headerlink" title="健身碎碎"></a>健身碎碎</h1><ol><li>要不要练到力竭?</li></ol><p>疲劳加重,不一定恢复,建议最后一组为力竭</p><h2 id="减脂和-增肌-未补充"><a href="#减脂和-增肌-未补充" class="headerlink" title="减脂和 增肌(未补充)"></a>减脂和 增肌(未补充)</h2><p>误区:是一种方法和毅力和自律什么的都没什么关系</p><p>原理1:热量缺口10-20%</p><p>原理2:碳蛋脂分配</p><p>原理3:碳水的日内分配</p><h3 id="碳蛋脂经验配额"><a href="#碳蛋脂经验配额" class="headerlink" title="碳蛋脂经验配额"></a>碳蛋脂经验配额</h3><table><thead><tr><th></th><th align="center">碳</th><th>蛋</th><th>脂</th></tr></thead><tbody><tr><td>训练日</td><td align="center">3-3.5</td><td>1.5-2</td><td>0.8</td></tr><tr><td></td><td align="center">200g</td><td>132</td><td>52.8</td></tr><tr><td>休息日</td><td align="center">1.5-2kg</td><td>2</td><td>0.8</td></tr><tr><td></td><td align="center">132</td><td>132</td><td>52.8</td></tr></tbody></table><h4 id="调整方法"><a href="#调整方法" class="headerlink" title="调整方法:"></a>调整方法:</h4><ul><li><p>2周1.5-2.5%就合适(1kg-1.65kg)</p></li><li><p>碳水调节0.3-0.5(20-33g)</p></li><li><p>能掉就不减碳水</p></li></ul><p>PS: 吃太少会影响身体代谢,反而没有热量差了</p><h3 id="日内分配"><a href="#日内分配" class="headerlink" title="日内分配:"></a>日内分配:</h3><h4 id="训后餐-刺激胰岛素分泌"><a href="#训后餐-刺激胰岛素分泌" class="headerlink" title="训后餐:刺激胰岛素分泌"></a>训后餐:刺激胰岛素分泌</h4><p>配额:50%碳水+30-50g蛋+少于20g脂</p><p>时间:练后半小时吃上</p><p>举例:便携快碳+蛋白粉+正餐</p><h4 id="早饭-防止血糖过低"><a href="#早饭-防止血糖过低" class="headerlink" title="早饭:防止血糖过低"></a>早饭:防止血糖过低</h4><p>配额:30%碳水+蛋白质适量+脂肪适量</p><h4 id="训前餐-训练有力气-抑制肌肉分解"><a href="#训前餐-训练有力气-抑制肌肉分解" class="headerlink" title="训前餐:训练有力气,抑制肌肉分解"></a>训前餐:训练有力气,抑制肌肉分解</h4><p>配额:20%碳水+蛋白质可吃可不吃+脂肪一般不吃</p><p>时间:到了健身房再吃</p><h4 id="其他餐"><a href="#其他餐" class="headerlink" title="其他餐:"></a>其他餐:</h4><p>蛋白质+脂肪+蔬菜+ 碳水少吃或不吃</p><h4 id="总结-我一般下午训练"><a href="#总结-我一般下午训练" class="headerlink" title="总结:我一般下午训练"></a>总结:我一般下午训练</h4><table><thead><tr><th>减脂训练日</th><th>碳(200g)</th><th>蛋(132g)</th><th>脂(50g)</th></tr></thead><tbody><tr><td>早饭</td><td>30%(60)</td><td>24g</td><td></td></tr><tr><td>午饭(其他餐)</td><td></td><td></td><td></td></tr><tr><td>训前餐</td><td>20%</td><td></td><td></td></tr><tr><td>晚饭(训后餐)</td><td>50%</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>减脂休息日</th><th>碳(200g)</th><th>蛋(132g)</th><th>脂(50g)</th></tr></thead><tbody><tr><td>早饭</td><td>30%(60)</td><td></td><td></td></tr><tr><td>午饭(其他餐)</td><td></td><td></td><td></td></tr><tr><td>训前餐</td><td>20%</td><td></td><td></td></tr><tr><td>晚饭(训后餐)</td><td>50%</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>增肌训练日</th><th>碳(200g)</th><th>蛋(132g)</th><th>脂(50g)</th></tr></thead><tbody><tr><td>早饭</td><td>30%(60)</td><td></td><td></td></tr><tr><td>午饭(其他餐)</td><td></td><td></td><td></td></tr><tr><td>训前餐</td><td>20%</td><td></td><td></td></tr><tr><td>晚饭(训后餐)</td><td>50%</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>增肌休息日</th><th>碳(200g)</th><th>蛋(132g)</th><th>脂(50g)</th></tr></thead><tbody><tr><td>早饭</td><td>30%(60)</td><td></td><td></td></tr><tr><td>午饭(其他餐)</td><td></td><td></td><td></td></tr><tr><td>训前餐</td><td>20%</td><td></td><td></td></tr><tr><td>晚饭(训后餐)</td><td>50%</td><td></td><td></td></tr></tbody></table><h2 id="碳蛋脂来源-未完"><a href="#碳蛋脂来源-未完" class="headerlink" title="## 碳蛋脂来源(未完)"></a>## 碳蛋脂来源(未完)</h2><p>重油炒菜:10-15g</p><p>蛋黄:5g</p><p>清炒菜5g</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>05_statement</title>
    <link href="/2023/07/29/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/05_statement/"/>
    <url>/2023/07/29/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/05_statement/</url>
    
    <content type="html"><![CDATA[<h1 id="05-statement"><a href="#05-statement" class="headerlink" title="05_statement"></a>05_statement</h1><p>主题：print关键字的实现</p><p>scan.c中进行对print的读取和判断</p><p>1、scanint函数，对字符和数字进行存储，返回其长度</p><p>2、keyword函数，对pirnt进行判断</p><p>stmt.c中对树进行构建    </p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>a compiler writing journey</title>
    <link href="/2023/07/28/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/04_assembly/"/>
    <url>/2023/07/28/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/04_assembly/</url>
    
    <content type="html"><![CDATA[<h1 id="04-assembly"><a href="#04-assembly" class="headerlink" title="04_assembly"></a>04_assembly</h1><p>主题：将代码转化成汇编码</p><p>具体的实现有汇编码，主要思路是输入ast输出相应的汇编到out.s里</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>a compiler writing journey</title>
    <link href="/2023/07/28/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/02_Parser/"/>
    <url>/2023/07/28/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/02_Parser/</url>
    
    <content type="html"><![CDATA[<h1 id="02-parser"><a href="#02-parser" class="headerlink" title="# 02_parser"></a># 02_parser</h1><p>主题：将token转化成ast节点，但没有考虑优先级</p><p>在expr.c中binexpr进行递归创建ast树</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>a compiler writing journey</title>
    <link href="/2023/07/27/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/01_Scanner/"/>
    <url>/2023/07/27/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/01_Scanner/</url>
    
    <content type="html"><![CDATA[<h1 id="01-Scanner"><a href="#01-Scanner" class="headerlink" title="01_Scanner"></a>01_Scanner</h1><p>旨在通过写scan函数来对文件流的一个character进行判断，判断类型在defs.h中，分别是+-*&#x2F;，int类型。休要写函数来读取文件流，读取int类型</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/07/27/%E5%A4%8D%E7%9B%98/%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/"/>
    <url>/2023/07/27/%E5%A4%8D%E7%9B%98/%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="非暴力沟通"><a href="#非暴力沟通" class="headerlink" title="非暴力沟通"></a>非暴力沟通</h1><p>主题：一种沟通方式，促进人际关系，使人互助</p><p>相互帮助，让人感到喜悦</p><p>不是顺从也不是暂时使用的技巧</p><p>四个要素：</p><p>1、观察</p><p>2、感受</p><p>3、需要</p><p>4、请求</p><p>异化沟通：</p><p>评判，比较，推卸责任，强人所难</p><p>评判：当我们不喜欢或者不理解时候，就有这种倾向，对他人的指责，批评，辱骂等</p><p>比较：不言而喻</p><p>推卸责任：“不得不做”，“你让我”等词汇，因为外在的影响。这一条是有争议的，比如说难道自己出现了消极的情绪完全就是自己的问题等</p><p>强人所难：不做某事就会有惩罚之类的</p><h2 id="2、观察和评论"><a href="#2、观察和评论" class="headerlink" title="2、观察和评论"></a>2、观察和评论</h2><p>关键在于：需要加入特定的情况，理由和主观的评判。</p><p>某人花钱大手大脚</p><p>某人在上周花了一千元</p><h2 id="3、体会和表达感受"><a href="#3、体会和表达感受" class="headerlink" title="3、体会和表达感受"></a>3、体会和表达感受</h2><p>人们倾向于服从正确思想，而不去表达自己的感受。表达自己感受和愿望，而不是去批判和指责，更有可能获得积极的回应。</p><p>区分感受和想法：感受是某种心情的描述，而不是对能力的描述</p><p>例子：高兴，兴奋，激动，欣慰&#x2F;感到自卑无能</p><h2 id="4、感受的根源"><a href="#4、感受的根源" class="headerlink" title="4、感受的根源"></a>4、感受的根源</h2><p>将自己的情绪和行为，归结为他人</p><p>对于不中听的话的反应：</p><p>自责：不言而喻</p><p>指责：不言而喻</p><p>了解我们的感受和需要</p><p>体会他人的感受和需要</p><p>使用”感到因为“来</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>直接说出需求，更有可能有积极回应。而不是像习惯思考对方做错了什么</p><h2 id="5、请求"><a href="#5、请求" class="headerlink" title="5、请求"></a>5、请求</h2><ol><li>具体的请求</li></ol><p>告诉对方想要他干什么，而不是请求不干什么，也不是抽象的描述</p><ol start="2"><li>清楚的目标</li></ol><p>不经要自己知道自己的目标，还要明确他人的目标（我不清楚不提这个是什么原因，你能否告诉我们，你期待什么样的反馈呢）</p><ol><li>反馈</li></ol><p>确认他人清除意思</p><h2 id="6、倾听"><a href="#6、倾听" class="headerlink" title="6、倾听"></a>6、倾听</h2><p>专心感受他人的感受和需要</p><p>反馈：表示已经了解到其意思，建议使用疑问句</p><p>应该为他人充分表达创造条件，</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/07/26/%E5%A4%8D%E7%9B%98/%E8%87%AA%E6%8E%A7%E5%8A%9B/"/>
    <url>/2023/07/26/%E5%A4%8D%E7%9B%98/%E8%87%AA%E6%8E%A7%E5%8A%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="自控力"><a href="#自控力" class="headerlink" title="自控力"></a>自控力</h1><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><p>主题是：自控力的运作和如何利用意志力培养好习惯</p><p>观点：</p><ul><li><p>自控力很关键，决定我们做什么，吃什么，说什么。</p></li><li><p>大多数人感觉自控只是一时，力不从心的失控才是常态，被情绪，感情，想法所左右。</p></li><li><p>人们对意志力有错误的认知，错误的方法，是的可能出现做某些事出现无益反而起反作用。</p></li></ul><p><u>深入剖析</u>：指的是对于意志力是怎么运转的</p><p><u>意志力实验</u>：去实验，什么是对的，什么有用，什么没用。</p><p><u>选择一个意志力挑战</u>：</p><ul><li><p>想要改掉是习惯</p></li><li><p>想要逃避的事情</p></li><li><p>想要多做的事情</p></li></ul><p><u>戒色并坚持学习编程</u></p><h5 id="知识点1：提升自控的有效途径在于，弄清楚如何失控，为何失控。对意志力过于乐观和自信往往会失控，原因是不知道何时会失控"><a href="#知识点1：提升自控的有效途径在于，弄清楚如何失控，为何失控。对意志力过于乐观和自信往往会失控，原因是不知道何时会失控" class="headerlink" title="知识点1：提升自控的有效途径在于，弄清楚如何失控，为何失控。对意志力过于乐观和自信往往会失控，原因是不知道何时会失控"></a>知识点1：提升自控的有效途径在于，弄清楚如何失控，为何失控。对意志力过于乐观和自信往往会失控，原因是不知道何时会失控</h5><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>意志力定义：驾驭“我要”，“我不要”，“我想要”三种力量</p><h5 id="深入剖析1：更难的事情是什么？想象正处于一个意志力挑战中，更难的事情是什么？为什么会如此困难？它给你的感觉是什么？"><a href="#深入剖析1：更难的事情是什么？想象正处于一个意志力挑战中，更难的事情是什么？为什么会如此困难？它给你的感觉是什么？" class="headerlink" title="深入剖析1：更难的事情是什么？想象正处于一个意志力挑战中，更难的事情是什么？为什么会如此困难？它给你的感觉是什么？"></a>深入剖析1：更难的事情是什么？想象正处于一个意志力挑战中，更难的事情是什么？为什么会如此困难？它给你的感觉是什么？</h5><p>如果在寝室的话，意志力挑战有多个</p><ol><li><p>看视频打游戏的冲动</p></li><li><p>想去打手冲的冲动</p></li><li><p>拖延学习看书的冲动</p></li></ol><h5 id="深入剖析2：意志力挑战就是两个自我对抗，意志力挑战是什么？如何描述两个不同的自我？明智的你想要干什么？冲动的你想要干什么？给冲动的自我命名，“拖延者”，“饼干怪兽”，当它们出现的时唤醒明智的自己。"><a href="#深入剖析2：意志力挑战就是两个自我对抗，意志力挑战是什么？如何描述两个不同的自我？明智的你想要干什么？冲动的你想要干什么？给冲动的自我命名，“拖延者”，“饼干怪兽”，当它们出现的时唤醒明智的自己。" class="headerlink" title="深入剖析2：意志力挑战就是两个自我对抗，意志力挑战是什么？如何描述两个不同的自我？明智的你想要干什么？冲动的你想要干什么？给冲动的自我命名，“拖延者”，“饼干怪兽”，当它们出现的时唤醒明智的自己。"></a>深入剖析2：意志力挑战就是两个自我对抗，意志力挑战是什么？如何描述两个不同的自我？明智的你想要干什么？冲动的你想要干什么？给冲动的自我命名，“拖延者”，“饼干怪兽”，当它们出现的时唤醒明智的自己。</h5><p>人们有自我意识，自控没有自我意识就不会起作用。大部分人做决定的时候意识开了自动挡。也就是说根本没有意识到做了什么决定。</p><p>注意力不集中，更容易向屈服于诱惑。</p><h5 id="意志力实验：更强的自控力就需更多的自我意识，首先要知道什么决定需要意志力。记录一天的决定，分析哪些有利于目标，哪些不利于目标-。坚持记录做的决定有利于减少注意力分散导致的自控力减弱。"><a href="#意志力实验：更强的自控力就需更多的自我意识，首先要知道什么决定需要意志力。记录一天的决定，分析哪些有利于目标，哪些不利于目标-。坚持记录做的决定有利于减少注意力分散导致的自控力减弱。" class="headerlink" title="意志力实验：更强的自控力就需更多的自我意识，首先要知道什么决定需要意志力。记录一天的决定，分析哪些有利于目标，哪些不利于目标 。坚持记录做的决定有利于减少注意力分散导致的自控力减弱。"></a>意志力实验：更强的自控力就需更多的自我意识，首先要知道什么决定需要意志力。记录一天的决定，分析哪些有利于目标，哪些不利于目标 。坚持记录做的决定有利于减少注意力分散导致的自控力减弱。</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/07/26/%E5%A4%8D%E7%9B%98/%E5%81%9A%E4%BA%8B%E6%83%85%E7%9A%84%E6%AD%A5%E9%AA%A4/"/>
    <url>/2023/07/26/%E5%A4%8D%E7%9B%98/%E5%81%9A%E4%BA%8B%E6%83%85%E7%9A%84%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="做事情的步骤"><a href="#做事情的步骤" class="headerlink" title="做事情的步骤"></a>做事情的步骤</h1><h2 id="1、思路"><a href="#1、思路" class="headerlink" title="1、思路"></a>1、思路</h2><p>做事前思考</p><ul><li>做什么，为什么做？围绕目的来做事</li></ul><p>写下目标，做事的原因，怎么才算完成目标</p><ul><li>怎么做？</li></ul><p>每个步骤的目标，怎么才算完成目标</p><p>做事中</p><ul><li>避免其他事情干扰</li></ul><p>设定闹钟</p><p>做事后</p><p>比较目标是否完成</p><h2 id="2、具体的实施"><a href="#2、具体的实施" class="headerlink" title="2、具体的实施"></a>2、具体的实施</h2><h3 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h3><p>做事前思考</p><h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><ul><li>目的是看懂在写什么，然后获得启发</li></ul><h4 id="反馈"><a href="#反馈" class="headerlink" title="反馈"></a>反馈</h4><p>读书应该回答以下问题才算是在真正的读书。</p><ul><li><p>主题是什么，哪个方面的主题？</p></li><li><p>有哪些部分，提出什么论点？</p></li><li><p>是否有道理？</p></li><li><p>对我有什么用？</p></li></ul><h4 id="具体的步骤"><a href="#具体的步骤" class="headerlink" title="具体的步骤"></a>具体的步骤</h4><p>读的途中在问自己作者在解决什么问题</p><p>读序：了解主题对主题归类</p><p>读目录：哪些部分组成</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/07/24/%E6%95%99%E7%A8%8B/vim%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/07/24/%E6%95%99%E7%A8%8B/vim%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="vim的配置以及使用"><a href="#vim的配置以及使用" class="headerlink" title="vim的配置以及使用"></a>vim的配置以及使用</h1><p>vim的配置</p><p><a href="https://zhuanlan.zhihu.com/p/188499395">在VSCode里面配置Vim的正确姿势（细节解析） - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/430603620">vscode + vim 全键盘操作高效搭配方案 - 知乎 (zhihu.com)</a></p><p>vim的使用（按照2的配置）</p><p>HL行内前后移动</p><p>zz展开关闭</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs text">cmd + g c ： 显示命令面板<br> cmd + g s ： 打开设置页面<br> cmd + g k ： 打开热键映射<br> cmd + g m ： 打开一个目录<br> cmd + g f ： 打开一个文件<br> cmd + g h ： 打开最近记录<br> cmd + g n ： 新建vscode实例<br> cmd + g q ： 关闭vscode示例<br> ​<br> cmd + f n ： 新建文件<br> cmd + f o ： 打开文件<br> cmd + f e ： 另存为文件<br> cmd + f s ： 保存文件<br> cmd + f w ： 保存所有文件<br> cmd + f q ： 关闭文件<br> cmd + f a ： 关闭所有文件<br> ​<br> cmd + n [ ： 切换侧边栏显示状态<br> cmd + n 1 ： 显示文件资源管理器<br> cmd + n 2 ： 显示TODO Tree<br> cmd + n 3 ： 显示全局搜索<br> cmd + n 4 ： 显示debug<br> cmd + n 5 ： 显示版本控制<br> cmd + n 6 ： 显示SQL Tools<br> cmd + n 7 ： 显示Docker<br> cmd + n 8 ： 显示测试<br> cmd + n 9 ： 显示插件商店<br> ​<br> cmd + p ] ： 切换面板显示状态<br> cmd + p 1 ： 显示问题<br> cmd + p 2 ： 显示输出<br> cmd + p 3 ： 显示终端<br> cmd + p 4 ： 显示调试控制台<br> cmd + p 5 ： 显示SQL CONSOLE<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">cmd + q ：关闭当前选项卡或分屏<br> cmd + e ：聚焦在第一个选项卡中<br> cmd + , ：切换到上一个选项卡<br> cmd + . ：切换到下一个选项卡<br> ​<br> cmd + w s ：拆分一个上下分屏<br> cmd + w v ：拆分一个左右分屏<br> ​<br> cmd + w k ：将光标向上移动1屏<br> cmd + w j ：将光标向下移动1屏<br> ​<br> cmd + w h ：将光标向左移动1屏<br> cmd + w l ：将光标向右移动1屏<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">cmd + h ： 触发帮助提示<br>cmd + j ： 触发参数提示<br>cmd + k ： 触发建议提示<br>cmd + n ： 移动到下一个建议<br>cmd + p ： 移动到上一个建议<br>tab ： 选择下一个建议<br>enter ： 选择当前建议<br>​<br>cmd + alt + l ： 格式化代码（个人习惯）<br>​<br>cmd + = ： 放大字体<br>cmd + - ： 缩小字体<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">jj ： 退出INSERT模式<br>zz ： 切换代码折叠（原生vim的zz不是切换折叠）<br>​<br>H ：跳转行首、取代^<br>L ：跳转行尾、取代$<br>​<br>g[ ： 跳转到上一个问题<br>g] ： 跳转到下一个问题<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>clang-format设置</title>
    <link href="/2023/07/24/%E6%95%99%E7%A8%8B/clang-format%E8%AE%BE%E7%BD%AE/"/>
    <url>/2023/07/24/%E6%95%99%E7%A8%8B/clang-format%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>链接在此：</p><p><a href="https://zhuanlan.zhihu.com/p/514541589">使用 clang-format 进行 C++ 代码风格管理 - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/oloroso/p/14699855.html">我使用的 clang-format 配置文件 - 乌合之众 - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/07/22/%E5%A4%8D%E7%9B%98/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/"/>
    <url>/2023/07/22/%E5%A4%8D%E7%9B%98/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<p>讲了读书速度的问题。防止逗留和倒退的方法。</p><p>讲了检视阅读步骤。寻找主题和主题的脉络。关键点摘要。想象自己是一个侦探，发现别人发现不了的细节。</p><p>做笔记的原因和方式</p><p> 自我要求的读者，阅读的艺术是什么。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2023 What I really want to do</title>
    <link href="/2023/07/21/Plan%20And%20What%20I%20did/2023%20What%20I%20really%20want%20to%20do/"/>
    <url>/2023/07/21/Plan%20And%20What%20I%20did/2023%20What%20I%20really%20want%20to%20do/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-What-I-really-want-to-do"><a href="#2023-What-I-really-want-to-do" class="headerlink" title="2023 What I really want to do"></a>2023 What I really want to do</h1>]]></content>
    
    
    <categories>
      
      <category>Plan And What I did</category>
      
      <category>2023</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>7月计划</title>
    <link href="/2023/07/21/Plan%20And%20What%20I%20did/2023-7/"/>
    <url>/2023/07/21/Plan%20And%20What%20I%20did/2023-7/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-7"><a href="#2023-7" class="headerlink" title="2023-7"></a>2023-7</h1><h2 id="7月想要做"><a href="#7月想要做" class="headerlink" title="7月想要做"></a>7月想要做</h2><h3 id="1、编程能力-4、反思"><a href="#1、编程能力-4、反思" class="headerlink" title="1、编程能力+4、反思"></a>1、编程能力+4、反思</h3><h4 id="每天练一篇题目，复习4篇题目"><a href="#每天练一篇题目，复习4篇题目" class="headerlink" title="每天练一篇题目，复习4篇题目"></a>每天练一篇题目，复习4篇题目</h4><p>早上9点-9点半</p><p>就是说这个月刷到前缀树模板秒杀</p><h4 id="每天看懂并复现acwj的一节"><a href="#每天看懂并复现acwj的一节" class="headerlink" title="每天看懂并复现acwj的一节"></a>每天看懂并复现acwj的一节</h4><p>也就是说这个月到10_forloop</p><h3 id="2、培养积极情绪-4、反思"><a href="#2、培养积极情绪-4、反思" class="headerlink" title="2、培养积极情绪+4、反思"></a>2、培养积极情绪+4、反思</h3><h4 id="积极心理学"><a href="#积极心理学" class="headerlink" title="积极心理学"></a>积极心理学</h4><p>每周1节，然后思考我能将该节的知识怎么运用。这周对这些知识点进行实践。</p><h4 id="锻炼-冥想"><a href="#锻炼-冥想" class="headerlink" title="锻炼+冥想"></a>锻炼+冥想</h4><p>记录饮食和体重-要知道做什么有用和做什么没用，别丢了西瓜捡芝麻</p><p>记录每日训练动作和状态</p><p>看视频太久之后，忘记要做什么事情，忘记做事前的原因，做事情的动力也随之消失。这时候该怎么做呢？</p><p>我的目标就是改善此刻，变得幸福。增加了我的能力，开拓了视野，然后对社会还是有益的。</p>]]></content>
    
    
    <categories>
      
      <category>Plan And What I did</category>
      
      <category>2023</category>
      
      <category>7月</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023 What I really want to do</title>
    <link href="/2023/07/21/Plan%20And%20What%20I%20did/2023/2023%20What%20I%20really%20want%20to%20do/"/>
    <url>/2023/07/21/Plan%20And%20What%20I%20did/2023/2023%20What%20I%20really%20want%20to%20do/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-What-I-really-want-to-do"><a href="#2023-What-I-really-want-to-do" class="headerlink" title="2023 What I really want to do"></a>2023 What I really want to do</h1><ul><li><p>提升编程计算机水平</p></li><li><p>培养积极情绪</p></li><li><p>读书</p></li><li><p>锻炼</p></li><li><p>坚持写log，来总结反思</p></li></ul><p>原因：这些事情能培养我的技能，优势，拓宽我的视野，让我感觉更好，更自信。</p><h2 id="How-to-do"><a href="#How-to-do" class="headerlink" title="How to do"></a>How to do</h2><p>而改变需要养成习惯，因为习性会让人不知不觉走向旧路，后果就是毫无进展，让人沮丧，最后失去动力。而养成习惯的话需要一个一个的养成，原因是人的意志力是有限的。</p><h4 id="这学期我养成了锻炼的习惯，而没有养成其他习惯"><a href="#这学期我养成了锻炼的习惯，而没有养成其他习惯" class="headerlink" title="这学期我养成了锻炼的习惯，而没有养成其他习惯"></a>这学期我养成了锻炼的习惯，而没有养成其他习惯</h4><p>养成习惯的原因是什么？</p><p>实际上并没有想象中那样需要很强的意志力，就是无论怎么样都坚持每周去做3次。而且我确确实实有收获，我的身材变化很大。也有可能是我不想浪费钱的缘故。</p><p>如何创造外在的动力？像健身房不去就会亏钱这种动力。</p><p>可以每天没完成就向贫困区捐10块钱</p><p>能保证严格执行吗？有可能捐了几次就不想执行了</p><p>总结：一个一个养成习惯，每天没完成就捐5块钱出去。</p>]]></content>
    
    
    <categories>
      
      <category>Plan And What I did</category>
      
      <category>2023</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>7月计划</title>
    <link href="/2023/07/21/Plan%20And%20What%20I%20did/2023/2023-7/"/>
    <url>/2023/07/21/Plan%20And%20What%20I%20did/2023/2023-7/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-7"><a href="#2023-7" class="headerlink" title="2023-7"></a>2023-7</h1><h2 id="7月想要做"><a href="#7月想要做" class="headerlink" title="7月想要做"></a>7月想要做</h2><h3 id="1、编程能力-4、反思"><a href="#1、编程能力-4、反思" class="headerlink" title="1、编程能力+4、反思"></a>1、编程能力+4、反思</h3><h4 id="每天练一篇题目，复习4篇题目"><a href="#每天练一篇题目，复习4篇题目" class="headerlink" title="每天练一篇题目，复习4篇题目"></a>每天练一篇题目，复习4篇题目</h4><p>也就是说这个月刷到前缀树模板秒杀</p><h4 id="每天看懂并复现acwj的一节"><a href="#每天看懂并复现acwj的一节" class="headerlink" title="每天看懂并复现acwj的一节"></a>每天看懂并复现acwj的一节</h4><p>也就是说这个月到10_forloop</p><h3 id="2、培养积极情绪-4、反思"><a href="#2、培养积极情绪-4、反思" class="headerlink" title="2、培养积极情绪+4、反思"></a>2、培养积极情绪+4、反思</h3><h4 id="积极心理学"><a href="#积极心理学" class="headerlink" title="积极心理学"></a>积极心理学</h4><p>每周1节，然后思考我能将该节的知识怎么运用。这周对这些知识点进行实践。</p><h4 id="锻炼"><a href="#锻炼" class="headerlink" title="锻炼"></a>锻炼</h4><p>记录饮食和体重-要知道做什么有用和做什么没用，别丢了西瓜捡芝麻</p><p>记录每日训练动作和状态</p>]]></content>
    
    
    <categories>
      
      <category>Plan And What I did</category>
      
      <category>2023</category>
      
      <category>7月</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>makefile理解和使用</title>
    <link href="/2023/07/20/%E6%95%99%E7%A8%8B/makefile%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/07/20/%E6%95%99%E7%A8%8B/makefile%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="makefile的理解和使用"><a href="#makefile的理解和使用" class="headerlink" title="makefile的理解和使用"></a>makefile的理解和使用</h1><p>是什么？</p><p>Linux系统下的c&#x2F;c++编译规则，用于自动编译程序，不需要手动gcc进行编译</p><p>作用：</p><ul><li><p>不用手动输入源文件和一堆参数</p></li><li><p>修改源文件时候，make编译只去编译修改的文件，没修改的就不会重复工作，提高编译效率</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023/7/18-7/23</title>
    <link href="/2023/07/18/%E5%A4%8D%E7%9B%98/2023-7-18-7-23/"/>
    <url>/2023/07/18/%E5%A4%8D%E7%9B%98/2023-7-18-7-23/</url>
    
    <content type="html"><![CDATA[<p>本周该做什么事情？</p><p>我的目标是什么？我想要提升自己的能力</p><ul><li><p><input disabled type="checkbox"> 应该每天一节</p></li><li><p><input disabled type="checkbox"> 总结链表二叉树</p></li><li><p><input disabled type="checkbox"> 看项目</p></li><li><p><input disabled type="checkbox"> 锻炼</p></li><li><p><input disabled type="checkbox"> 冥想</p></li><li><p><input disabled type="checkbox"> 学习摄影</p></li></ul><p>如何评价目标？做这件事的目的是否达成？</p><ul><li><p><input disabled type="checkbox"> 是否知道刷题的收获？</p></li><li><p><input disabled type="checkbox"> 是否总结出一些技巧</p></li><li><p><input disabled type="checkbox"> 是否理解项目的过程？是否有收获？</p></li><li><p><input disabled type="checkbox"> 体重是否变化，锻炼是否状态好？</p></li><li><p><input disabled type="checkbox"> 冥想是否完成四项？</p></li><li><p><input disabled type="checkbox"> 照片的特色有哪些？收获有哪些？</p></li></ul><p>7&#x2F;20</p><ul><li><p><input disabled type="checkbox"> 称体重</p></li><li><p><input disabled type="checkbox"> 感受刷牙洗脸</p></li><li><p><input disabled type="checkbox"> 刷题一节</p></li><li><p><input disabled type="checkbox"> 总结题目</p></li><li><p><input disabled type="checkbox"> 做项目</p></li><li><p><input disabled type="checkbox"> acwj一节</p></li><li><p><input disabled type="checkbox"> 冥想四项</p></li></ul><p>每项都要知道怎么做？去做然后对比效果？学到什么？改进？</p><p>每项都要计时</p><p>是什么题目？是什么技巧？有什么特点？</p><p>7&#x2F;21</p><ul><li><input disabled type="checkbox"> 刷题</li></ul><p>知道有哪些题目？题目的特点，这些题目用了什么解题技巧。下次是否是一类题目技巧应该总结</p><ul><li><p><input disabled type="checkbox"> acwj第三节</p></li><li><p><input disabled type="checkbox"> 冥想四项</p></li><li><p><input disabled type="checkbox"> 看照片&#x2F;看书</p></li></ul><p>是否有明确的目标和行动？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/07/18/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/%E4%BB%80%E4%B9%88%E6%98%AF%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%EF%BC%88AST%EF%BC%89/"/>
    <url>/2023/07/18/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/%E4%BB%80%E4%B9%88%E6%98%AF%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%EF%BC%88AST%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">titile:</span> <span class="hljs-string">什么是抽象语法树</span><br><span class="hljs-attr">categories:</span> <br><span class="hljs-bullet">-</span> <span class="hljs-string">项目</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">a</span> <span class="hljs-string">compiler</span> <span class="hljs-string">writing</span> <span class="hljs-string">journey</span><br></code></pre></td></tr></table></figure><h1 id="什么是抽象语法树（AST）"><a href="#什么是抽象语法树（AST）" class="headerlink" title="什么是抽象语法树（AST）"></a>什么是抽象语法树（AST）</h1><p>定义：简化的解析树</p><p>解析树是句子语法结构的图解图形版本。换句话说，我们可以说解析树准确地表示表达式、句子或文本的样子。它基本上是文本本身的直接翻译。</p><p>抽象语法树并没有像解析树那样向我们确切地展示表达式的样子。</p><p>scanner将expression转换成最小部分</p><p>parser将token转化成树结构</p><p>为什么需要AST呢？是对CST的简化版</p><p>AST特点不包含语法详细信息，如逗号等</p><p>运算符是父节点</p><p>对AST单个节点的剖析</p><p>每个token指向下一个sibing node 的first child node</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>瓦尔登湖</title>
    <link href="/2023/07/15/%E5%A4%8D%E7%9B%98/%E7%93%A6%E5%B0%94%E7%99%BB%E6%B9%96/"/>
    <url>/2023/07/15/%E5%A4%8D%E7%9B%98/%E7%93%A6%E5%B0%94%E7%99%BB%E6%B9%96/</url>
    
    <content type="html"><![CDATA[<p>作者独自生活在森林里，房子是自己盖的，日常所需靠双手劳动来解决，在那生活了两年两个月</p><p>人们像是赎罪一样生活，做着没完没了的苦役，从未认真地活着。</p><p><em>没有哪种思考方式或做事的方式，无论多么古老，值得我们盲目地去跟从。今天每个人宣称万世不移的真理，到明天也许就会被证明是谬误</em></p><p><em>无论你遭遇多少失败，“别伤心，我的孩子，因为有些事情如果你自己不去做，谁又会替你完成呢？”</em></p><p><em>我们就这样谨小慎微地活着，对生活充满敬畏之情，顽固地认为它没有任何改变的可能性</em></p>]]></content>
    
    
    <categories>
      
      <category>复盘</category>
      
      <category>成长</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>a compiler writing journey</title>
    <link href="/2023/07/14/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/a-compiler-writing-journey/"/>
    <url>/2023/07/14/%E9%A1%B9%E7%9B%AE/a-compiler-writing-journey/a-compiler-writing-journey/</url>
    
    <content type="html"><![CDATA[<p>项目是跟着GitHub<a href="https://github.com/DoctorWkt/acwj">acwj</a>做的，博客主要是记录对项目的复现的一些思考</p><ol><li>函数之间加static的含义</li></ol><p>        函数的作用域只在本文件，其他文件即使同名也没有关系</p><ol start="2"><li><p>‘#ifndef作用</p><p>避免同一个文件出现重复定义，例如a.h中include了c.h，b.c中include了a.h和c.h就出现了c.h的重复引用。</p><p>有必要吗？这是编写好代码的习惯，增加编译速度。</p></li></ol><p>   3. stderr标准输出流</p><h2 id="scanner的作用"><a href="#scanner的作用" class="headerlink" title="scanner的作用"></a>scanner的作用</h2><p>识别基本元素token </p><p>token是什么？</p><p>是具有意义的最小代码块，具有一个类型和字符串</p><p>defs.h中定义token的元素结构</p><p>decl.h中声明函数</p><p>data中定义全局变量</p><p>scan.c</p><ul><li><p>chrpos查找数字的位置</p></li><li><p>next</p></li><li><p>Putback</p></li><li><p>skip函数</p></li><li><p>scanint函数</p></li><li><p>scan函数</p></li></ul><p>main.c</p><ul><li><p>init</p></li><li><p>usage</p></li><li><p>scanfile</p></li><li><p>fopen</p></li></ul><h2 id="parse的作用"><a href="#parse的作用" class="headerlink" title="parse的作用"></a>parse的作用</h2><p>defs.h中定义ast node的结构</p><p>tree.c</p><p>相当于是ast的3个构造函数</p><p>expr.c</p><p>arithop将token的类型转换成ast的类型</p><p>primary将数字类型创建为leaf</p><p>binexper递归创建ast tree</p><h2 id="precedence"><a href="#precedence" class="headerlink" title="precedence"></a>precedence</h2><p>处理乘除和加减的优先级</p><p>如何处理优先级的？</p><p>定义优先级数组</p><p>递归调用函数，当出现优先级更高的运算符，先处理后面的节点变为right</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>a compiler writing journey</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>how to use git</title>
    <link href="/2023/07/14/%E6%95%99%E7%A8%8B/how-to-use-git/"/>
    <url>/2023/07/14/%E6%95%99%E7%A8%8B/how-to-use-git/</url>
    
    <content type="html"><![CDATA[<h1 id="how-to-use-git"><a href="#how-to-use-git" class="headerlink" title="how to use git"></a>how to use git</h1><p>版本控制系统：可以回溯以前的代码以及多人合作写代码</p><p>不需要联网</p><p><img src="/2023/07/14/%E6%95%99%E7%A8%8B/how-to-use-git/image1.png"></p><p>主要有三个地方</p><p>remote</p><p>repository</p><p>workspace</p><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git status<br>git <span class="hljs-keyword">add</span><br>git <span class="hljs-keyword">commit</span><br></code></pre></td></tr></table></figure><p>回溯</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">git reflog <span class="hljs-comment">#版本号</span><br>git <span class="hljs-built_in">log</span> <br>git <span class="hljs-built_in">log</span> <span class="hljs-comment">--pretty=oneline</span><br>git reset <span class="hljs-comment">--hard 版本号</span><br>git push -f<br></code></pre></td></tr></table></figure><p>撤销修改到暂存–没有commit之前</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git checkout <span class="hljs-comment">--file</span><br></code></pre></td></tr></table></figure><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span><br></code></pre></td></tr></table></figure><p>关联远程</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git remote add origin url<br>git push -u origin <span class="hljs-keyword">master</span><br><span class="hljs-title">git</span> push origin <span class="hljs-keyword">master</span> <span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p>创建分支</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">git checkout -<span class="hljs-keyword">b </span>dev <span class="hljs-comment">#创建一个名为dev的分支</span><br><br>git merge dev<span class="hljs-comment">#合并分支,版本号消失</span><br><br>git merge -no-ff -m <span class="hljs-string">&quot;&quot;</span> dev<span class="hljs-comment">#版本号还在</span><br><br>git <span class="hljs-keyword">branch </span>-d dev<span class="hljs-comment">#删除分支</span><br><br><br><span class="hljs-comment"># 多人合作</span><br><br>git checkout –<span class="hljs-keyword">b </span>dev <span class="hljs-keyword">origin/dev</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>收获</title>
    <link href="/2023/07/13/%E5%A4%8D%E7%9B%98/%E6%94%B6%E8%8E%B7/"/>
    <url>/2023/07/13/%E5%A4%8D%E7%9B%98/%E6%94%B6%E8%8E%B7/</url>
    
    <content type="html"><![CDATA[<p>以结果为导向做事情，注意力放在做事情上面，而不是怎么做？做不好</p><p>多线程思维，将研究生看做是工作。</p><p>2023&#x2F;7&#x2F;13</p><p>今天论文没中，感觉很失落，但是并没有想象中的那样痛苦，说明冒险后的失败并不像那样感觉天塌下来。如tal老师说的去尝试，去解决，去冒险真是这样的。</p><p>另一种感触就是生活是自己的责任，没人会来替你活一天。如论文没中的后，感觉世界都是孤零零的，也没人安慰什么的，是的没人会替你承担。</p><p>另一种感触是失落过后，是越沉思越难受，感觉思想变得狭隘，而将结果作为导向，注意力放在做事情上面，感觉更好了，并且更有动力，思考也更积极</p><p>我也是学着把研究生看作一种工作，培养多线程思维。</p><p>2023&#x2F;7&#x2F;21</p><p>一时间就必须反思总结，收获就很有限，就像烧开水一样 。</p><p>为什么会这么麻木？宁愿处于无聊平庸的麻木之中，也不去创造有意义的人生？</p><p>习性的力量不知不觉地让人走老路。养成好习惯，破除陋习才能改变。</p>]]></content>
    
    
    <categories>
      
      <category>复盘</category>
      
      <category>成长</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>积极心理学</title>
    <link href="/2023/07/08/%E5%A4%8D%E7%9B%98/%E7%A7%AF%E6%9E%81%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    <url>/2023/07/08/%E5%A4%8D%E7%9B%98/%E7%A7%AF%E6%9E%81%E5%BF%83%E7%90%86%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="积极心理学"><a href="#积极心理学" class="headerlink" title="积极心理学"></a>积极心理学</h1><h2 id="Class-01"><a href="#Class-01" class="headerlink" title="Class 01"></a>Class 01</h2><p>tal老师因为想要变得幸福，转专业到心理学系</p><p><mark>提醒怎么将这些知识点运用于生活</mark></p><p><mark>真正学习的阶段的内省的时刻。</mark></p><p>幸福并没有那种秘诀，并没有新东西，这是些常识，一个美好的生活起起落落</p><p>学习的终极目的不在于能力和技能的提升，而是自我实现，成为一个更完整的人。人的一生的神经回路都是变化着的。</p><p><mark>问问题的重要性</mark>：MBA的成功人士，彼得德鲁克，教育的目的是提供一个不断问问题的环境</p><ul><li><p>积极记笔记的重要性1.更加专注2.记忆力更深刻</p></li><li><p>静谧的重要性</p></li><li><p>问问题以及问对问题的重要性（MBA学生的研究，彼得德鲁克的话）</p></li><li><p>提醒自己到底做出了什么改变</p></li></ul><h2 id="Class02"><a href="#Class02" class="headerlink" title="Class02"></a>Class02</h2><p>心理学家没有提出正确的问题，尽管有好的意愿，有充足的资金，收益甚微</p><p><mark>问题创造现实，创造一场探索</mark></p><p><mark>问题也引导到现实的某一特定的部分</mark></p><p>例子：车上的孩子，只是问出了什么问题，不足和缺点就只能看到不好的一面，没有美好的事物</p><p>不去欣赏优点，激情美德等这样很难有高自尊、自信和快乐</p><p>欣赏的两层意思：</p><ol><li><p>心存感激，不把事情当做理所应当</p></li><li><p>增值，对某事欣赏，某事会增值</p></li></ol><p><mark>承担自己的责任</mark></p><h3 id="这是提高自尊和幸福的关键"><a href="#这是提高自尊和幸福的关键" class="headerlink" title="这是提高自尊和幸福的关键"></a>这是提高自尊和幸福的关键</h3><p>没人会来替你过一天，你的人生完全取决于你</p><ul><li><input disabled type="checkbox"> </li></ul>]]></content>
    
    
    <categories>
      
      <category>复盘</category>
      
      <category>成长</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>规划及原理</title>
    <link href="/2023/07/06/Plan%20And%20What%20I%20did/%E8%A7%84%E5%88%92%E5%8F%8A%E5%8E%9F%E7%90%86/"/>
    <url>/2023/07/06/Plan%20And%20What%20I%20did/%E8%A7%84%E5%88%92%E5%8F%8A%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h1><h2 id="为什么要反思？"><a href="#为什么要反思？" class="headerlink" title="为什么要反思？"></a>为什么要反思？</h2><p>根据小鼠实验，真正学习的阶段在于反思总结阶段。提升思考，提炼规律</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><ol><li>知识点和方法不去使用和记忆就会忘，然后就被习惯所淹没</li></ol><p>例子：</p><ul><li><p>忘记清除这个文件的方法</p></li><li><p>忘记书上（自控力，冥想，非暴力沟通）和视频（积极心理学）的理论</p></li><li><p>忘记冥想，忘记记录好事</p></li><li><p>忘记刷题的方法技巧</p></li></ul><ol start="2"><li>方法和技巧需要个人意识的参与才回去使用，换句话来说就是不会自动使用学到的东西然后养成习惯。</li></ol><p>例子：</p><ul><li><p>身体和大脑不会主动出现某件事情该怎么做</p></li><li><p>身体和大脑不会自动去做想要养成的习惯</p></li></ul><h3 id="总结：养成习惯和学习知识需要不断的提醒和练习。这只是一句话并不会让人知道怎么做。"><a href="#总结：养成习惯和学习知识需要不断的提醒和练习。这只是一句话并不会让人知道怎么做。" class="headerlink" title="总结：养成习惯和学习知识需要不断的提醒和练习。这只是一句话并不会让人知道怎么做。"></a>总结：<u>养成习惯和学习知识需要不断的提醒和练习</u>。这只是一句话并不会让人知道怎么做。</h3><h2 id="怎么复盘？"><a href="#怎么复盘？" class="headerlink" title="怎么复盘？"></a>怎么复盘？</h2><h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><p>小事即使复盘，大事阶段性复盘，事后全面复盘</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1、这周我要做什么？列出列表记下来。"><a href="#1、这周我要做什么？列出列表记下来。" class="headerlink" title="1、这周我要做什么？列出列表记下来。"></a>1、这周我要做什么？列出列表记下来。</h4><p>做事前的目标是什么？做的时候是否真的在向目标靠近？</p><p>有的时候做事情做着做着就只想把事情做完，而不是在于做事的效果。</p><ul><li><p>看剧，打游戏。本来是想获得愉快，结果就想把它看完，最后并没有想象中愉快</p></li><li><p>刷题，写blog也要避免出现这种情况</p></li></ul><h4 id="2、这些事情要怎么去评估做事效果？"><a href="#2、这些事情要怎么去评估做事效果？" class="headerlink" title="2、这些事情要怎么去评估做事效果？"></a>2、这些事情要怎么去评估做事效果？</h4><p>指出做这件事情的客观指标</p><h3 id="3、对比"><a href="#3、对比" class="headerlink" title="3、对比"></a>3、对比</h3><p>对比现实和指标，评价做事情的效果 </p><h3 id="4、更新指标和目标"><a href="#4、更新指标和目标" class="headerlink" title="4、更新指标和目标"></a>4、更新指标和目标</h3><p>每周思考这些指标和目标是否符合预期，是否需要调整</p><h3 id="如何创造人生的joy-moment？"><a href="#如何创造人生的joy-moment？" class="headerlink" title="如何创造人生的joy moment？"></a>如何创造人生的joy moment？</h3><p>1、清除多余的想法？</p><ul><li><p>这件事不得不做吗？</p></li><li><p>这件事对我来说是有意义重要的吗？对我和我身边的人</p></li></ul><p>2、设立一个月左右的小计划</p><ul><li><p>能直接去做</p></li><li><p>清晰的行动和目标</p></li><li><p>少于1个月</p></li></ul><p>3、更新地图</p><p>在做的时候我们会改变</p><p>每天拿出5分钟来更新我们的清单，知道什么有用？什么没用？</p><h2 id="想做的事情"><a href="#想做的事情" class="headerlink" title="想做的事情"></a>想做的事情</h2><ol><li><p>提升编程能力-培养优势，不然很难自信和快乐</p></li><li><p>培养积极情绪-拓展能力，拓宽思维</p></li><li><p>读书-学习what really work </p></li><li><p>写log记录生活-反思更新</p></li></ol><p>这些事情必须吗？这件事情重要吗？</p><p>能让我提升能力和自信，变得快乐和珍惜时光。</p><h2 id="怎么去做呢？"><a href="#怎么去做呢？" class="headerlink" title="怎么去做呢？"></a>怎么去做呢？</h2><p>只有养成习惯，才能破除限制，带来真正的改变。而意志力几乎是不会变的，每个月就养成一个习惯。</p><p>计划的特点：</p><ul><li><p>一个月的小目标</p></li><li><p>能够立马做</p></li><li><p>每天都有明确的目标和清楚的行动</p></li><li><p>反思总结</p></li></ul><h4 id="7月想要做"><a href="#7月想要做" class="headerlink" title="7月想要做"></a>7月想要做</h4><p>1、编程能力+4、反思</p><p>每天练一篇题目，复习4篇题目</p><p>也就是说这个月刷到前缀树模板秒杀</p><p>每天看懂并复现acwj的一节</p><p>也就是说这个月到10_forloop</p><p>2、培养积极情绪+4、反思</p><p>每周看一节积极心理学，然后思考我能将该节的知识怎么运用。这周对这些知识点进行实践。</p><p>锻炼</p><p>记录饮食和体重-要知道做什么有用和做什么没用，别丢了西瓜捡芝麻</p><p>记录每日训练动作和状态</p><h4 id="8月想要做"><a href="#8月想要做" class="headerlink" title="8月想要做"></a>8月想要做</h4><p>学数据结构（1节）</p><p>刷题（1篇新+2篇旧）</p><p>培养积极情绪（冥想+记录好事+记录锻炼+记录体重+记账+积极心理学+自控力+非暴力沟通）</p><p>学摄影（每周出去拍一次+每天看10张照片+学摄影技巧1章）</p><p>每天读20页，瓦尔登湖</p><h5 id="怎么去做？"><a href="#怎么去做？" class="headerlink" title="怎么去做？"></a>怎么去做？</h5><p>早上起来称体重</p><p>每天早上学一篇数据结构8点开学</p><p>中午看10张照片+复习积极心理学+自控力+非暴力沟通，如果出现锻炼的情况，就复习动作</p><p>下午16：30开始锻炼+记录锻炼</p><p>晚上8点开始刷题</p><p>9：30冥想+记账</p><p>10：00学摄影</p><p>11点看瓦尔登湖</p><h4 id="9月想要做"><a href="#9月想要做" class="headerlink" title="9月想要做"></a>9月想要做</h4><p>2、积极情绪</p><p>学习摄影，每日看10张照片</p>]]></content>
    
    
    <categories>
      
      <category>Plan And What I did</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数组总结</title>
    <link href="/2023/07/05/%E5%88%B7%E9%A2%98/%E6%95%B0%E7%BB%84/"/>
    <url>/2023/07/05/%E5%88%B7%E9%A2%98/%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="数组总结"><a href="#数组总结" class="headerlink" title="数组总结"></a>数组总结</h1><h2 id="一、快慢指针技巧"><a href="#一、快慢指针技巧" class="headerlink" title="一、快慢指针技巧"></a>一、快慢指针技巧</h2><h4 id="原地删除相同的元素-x2F-移除某元素-x2F-移动0"><a href="#原地删除相同的元素-x2F-移除某元素-x2F-移动0" class="headerlink" title="原地删除相同的元素&#x2F;移除某元素&#x2F;移动0"></a>原地删除相同的元素&#x2F;移除某元素&#x2F;移动0</h4><p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/">原地删除相同的元素</a></p><p><a href="https://leetcode.cn/problems/remove-element/">移除某元素</a></p><p><a href="https://leetcode.cn/problems/move-zeroes/">移动0</a></p><p>思路：fast一直遍历整个数组，slow遍历到不同元素的下一位</p><h2 id="二、左右指针技巧"><a href="#二、左右指针技巧" class="headerlink" title="二、左右指针技巧"></a>二、左右指针技巧</h2><h3 id="1、二分寻找和为target的两数"><a href="#1、二分寻找和为target的两数" class="headerlink" title="1、二分寻找和为target的两数"></a>1、二分寻找和为target的两数</h3><p><a href="https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted/">寻找和</a></p><p>思路：左右指针，相加得到sum，比较sum和target大小</p><h3 id="2、寻找最长回文子串"><a href="#2、寻找最长回文子串" class="headerlink" title="2、寻找最长回文子串"></a>2、寻找最长回文子串</h3><p><a href="https://leetcode.cn/problems/longest-palindromic-substring/">最长回文子串</a></p><p>思路：从i位置进行扩展寻找或从i，i+1进行拓展，最长的进行更新</p><h2 id="三、前缀和数组：对某个区间进行统计"><a href="#三、前缀和数组：对某个区间进行统计" class="headerlink" title="三、前缀和数组：对某个区间进行统计"></a>三、前缀和数组：对某个区间进行统计</h2><h3 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h3><ol><li>是什么？怎么定义的？</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//num[0...i-1]之和</span><br>preSum[i] = preSum[i<span class="hljs-number">-1</span>] + num[i<span class="hljs-number">-1</span>];<br><span class="hljs-comment">//注意的是数组大小：原数组+1</span><br></code></pre></td></tr></table></figure><ol start="2"><li>适用情况：查询i-j之间的和</li></ol><h3 id="2、题目"><a href="#2、题目" class="headerlink" title="2、题目"></a>2、题目</h3><p><a href="https://leetcode.cn/problems/range-sum-query-immutable/">检索一维数组</a></p><p><a href="https://leetcode.cn/problems/range-sum-query-2d-immutable/">检索二维数组</a></p><p>思路：某段l…r区域和就是以下，本质上是几个0…i之间进行加减</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">pre[r+<span class="hljs-number">1</span>] - pre[l]<br></code></pre></td></tr></table></figure><h2 id="四、差分数组"><a href="#四、差分数组" class="headerlink" title="四、差分数组"></a>四、差分数组</h2><h3 id="1、介绍-1"><a href="#1、介绍-1" class="headerlink" title="1、介绍"></a>1、介绍</h3><ol><li>是什么？</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//数组当前位值和前一位值之差</span><br>diff[i] = num[i] - num[i<span class="hljs-number">-1</span>];<br></code></pre></td></tr></table></figure><ol start="2"><li>什么用处？</li></ol><p>对某区间进行频繁增减</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//举例：在全范围上增加某个值num;</span><br>diff[<span class="hljs-number">0</span>]+=num;<br><span class="hljs-comment">//在1...3上增加某个值num</span><br>diff[<span class="hljs-number">1</span>]+=num;<br>diff[<span class="hljs-number">4</span>]-=num;<br><span class="hljs-comment">//进而在i...j上增加某值num</span><br>diff[i]+=num;<br>diff[j+<span class="hljs-number">1</span>]-=num;<br></code></pre></td></tr></table></figure><h3 id="2、题目-1"><a href="#2、题目-1" class="headerlink" title="2、题目"></a>2、题目</h3><p><a href="https://leetcode.cn/problems/car-pooling/">拼车</a></p><p><a href="https://leetcode.cn/problems/corporate-flight-bookings/">航班预定</a></p><p>思路：创建一个差分类，差分类的方法increase进行频繁调用</p><h2 id="五、滑动窗口"><a href="#五、滑动窗口" class="headerlink" title="五、滑动窗口"></a>五、滑动窗口</h2><h3 id="1、介绍-2"><a href="#1、介绍-2" class="headerlink" title="1、介绍"></a>1、介绍</h3><ol><li>什么是滑动窗口</li></ol><p>有两个指针left和right，right先进行移动，在满足某种条件后left再进行移动，left和right都是只增不减的</p><ol start="2"><li>有什么用</li></ol><p>对满足某条件的字符串进行查找</p><h3 id="2、题目-2"><a href="#2、题目-2" class="headerlink" title="2、题目"></a>2、题目</h3><p><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/">无重复最长子串</a></p><p><a href="https://leetcode.cn/problems/minimum-window-substring/">最小覆盖子串</a></p><p><a href="https://leetcode.cn/problems/permutation-in-string/">字符串排列</a></p><p><a href="https://leetcode.cn/problems/find-all-anagrams-in-a-string/">异位词</a></p><h2 id="六、滑动窗口的延伸"><a href="#六、滑动窗口的延伸" class="headerlink" title="六、滑动窗口的延伸"></a>六、滑动窗口的延伸</h2><h2 id="七、二维数组的花式遍历"><a href="#七、二维数组的花式遍历" class="headerlink" title="七、二维数组的花式遍历"></a>七、二维数组的花式遍历</h2><p>1、反转单词，单词之间顺序反转，单词内部顺序不反转</p><p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/">反转单词</a></p><p>思路：字符串反转+每个单词反转</p><p>怎么减去中间多余空格？</p><p>利用前面学的快慢指针原地删除的机制，就能删除之间和前置空格</p><p>2、进行螺旋遍历</p><p>思路：if条件为啥是那样的？说明存在这一行。</p><h3 id="滑动窗口的延伸"><a href="#滑动窗口的延伸" class="headerlink" title="滑动窗口的延伸"></a>滑动窗口的延伸</h3><p>1、对于什么题目？</p><p>查找是否存在重复序列</p><p>2、什么思路？</p><p>有个映射的手法，加速了窗口内字符串截取过程，变成数字的变化映射。</p><p>利用滑动窗口框架，扩大时候更新窗口的映射值，缩小时候检验映射值是否相等，更新映射</p><h3 id="二叉搜索"><a href="#二叉搜索" class="headerlink" title="二叉搜索"></a>二叉搜索</h3><p>1、是什么？</p><p>主要就是将数据每次分成两堆进行查找</p><p>2、细节</p><ul><li><p>应用if else if 而不用else标明每种情况</p></li><li><p>while里面符号和什么有关</p></li><li><p>if else if里面的符号和什么有关</p></li></ul><p>3、怎么查找左边界</p><p>4、怎么查找有边界</p><p>1，1，1，2，2，2，2，3，3，3，3</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> res;<br><span class="hljs-keyword">while</span>(left &lt;= right)&#125;&#123;<br>    <span class="hljs-type">int</span> mid = left + (right - left)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">if</span>(num[mid]&gt;=target)&#123;<br>       res = res&gt;mid?mid:res;<br>       right = mid - <span class="hljs-number">1</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>       left = mid +<span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="带权重的随机算法"><a href="#带权重的随机算法" class="headerlink" title="带权重的随机算法"></a>带权重的随机算法</h3><p>1、题意是什么？</p><p>实现函数，随机返回一个下标i，下标的权重为对应的num[i]</p><p>2、子问题</p><p>生成随机数</p><p>随机数落入某权重区间就为该下标</p><ul><li>生成随机数</li></ul><p>应该在0…preSum[n]</p><ul><li>判断在某区间</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//生成随</span><br>mt19937 gen;<br>uniform_int_distribution&lt;<span class="hljs-type">int</span>&gt; dis;<br><br><span class="hljs-built_in">gen</span>(random_device&#123;&#125;())<br>uniform_int_distribution&lt;<span class="hljs-type">int</span>&gt; dis;<br><span class="hljs-built_in">accumulate</span>(<span class="hljs-built_in">begin</span>(),<span class="hljs-built_in">end</span>(),<span class="hljs-number">0</span>)<br><span class="hljs-built_in">partial_sum</span>(<span class="hljs-built_in">begin</span>(),<span class="hljs-built_in">end</span>(),res_iter);<br><span class="hljs-built_in">back_inserter</span>(pre);<br><span class="hljs-built_in">lower_bound</span>(<span class="hljs-built_in">begin</span>(),<span class="hljs-built_in">end</span>(),x)<br></code></pre></td></tr></table></figure><h3 id="数组9"><a href="#数组9" class="headerlink" title="数组9"></a>数组9</h3><p>[在D天送达包裹的能力](<a href="https://leetcode.cn/problems/capacity-to-ship-packages-within-d-days/">1011. 在 D 天内送达包裹的能力 - 力扣（LeetCode）</a>)</p><p>题意：每天对包裹进行不超过运载能力进行运载，给出days天运送完所有包裹的最低运载能力</p><p>当时想法：就是在包裹中切days-1刀，求得怎么切才使阈值最小。然而想不出有什么策略进行切割</p><p>官方思路：用二分法，在某一运载能力之前不能n天运完，之后能n天运完</p><p>题目难点：神来之笔，so amazing</p><h3 id="数组10"><a href="#数组10" class="headerlink" title="数组10"></a>数组10</h3><p>[田忌赛马](<a href="https://leetcode.cn/problems/advantage-shuffle/">力扣 (leetcode.cn)</a>)</p><p>题意：交换数组元素的顺序使得num1[i]&gt;num2[i]的数量最多</p><p>当时想法：想不出什么好的策略</p><p>官方思路：</p><p>     双发最大的进行比较，比得过最大的上，比不过最小的上</p><p>题目难点：使得利益最大化，在于能赢就赢，赢不了就减少损失。</p><h3 id="数组11"><a href="#数组11" class="headerlink" title="数组11"></a>数组11</h3><p>[设计增删返回随机元素平均都为o(1)的数据结构](<a href="https://leetcode.cn/problems/insert-delete-getrandom-o1/">380. O(1) 时间插入、删除和获取随机元素 - 力扣（LeetCode）</a>)</p><p>题意：设计一种数据结构使得增、删和随机返回一个元素都为O(1)的事件复杂度</p><p>当时想法：第一时间想到哈希表来进行增删操作，但是如何随机返回一个元素也为O(1)想不到的</p><p>官方答案的思路：</p><ol><li>怎么进行随机返回一个元素？</li></ol><p>用数组来存储元素，首先数组在增，删操作都可以实现O(1)，然后利用数组的优势生成数组长度内的随机数，则可以O(1)的时间复杂度。</p><p>题目难点：数组的使用真是神来之笔</p><p>[不选择黑名单](<a href="https://leetcode.cn/problems/random-pick-with-blacklist/">710. 黑名单中的随机数 - 力扣（LeetCode）</a>)</p><p>题意：给一个n和黑名单，在0-n范围上，随机抽取返回不是黑名单中的数</p><p>当时想法：做一个白名单数组，在上面随机抽取。但是出现内存限制，则需要不创建数组的情况下随机抽取，就没有想法了</p><p>官方思路：</p><ol><li>怎么才能不抽到黑名单的数？</li></ol><p>对黑名单的数进行映射到白名单</p><ol start="2"><li>怎么映射？</li></ol><p>在n-1往前找到是白名单的数，然后进行映射</p><p>题目难点：想不到还有映射的方法，真是太巧妙了</p><h2 id="数组12"><a href="#数组12" class="headerlink" title="数组12"></a>数组12</h2><p>[去除重复字母](<a href="https://leetcode.cn/problems/remove-duplicate-letters/">316. 去除重复字母 - 力扣（LeetCode）</a>)</p><p>题意：去除字符串的重复字符，返回字典序最小的没有重复的字符。</p><p>当时想法：没什么想法，上来感觉要用哈希表去重，但始终想不到怎么得到字典序最小的组合。</p><p>以下是官方答案的思路：</p><ol><li>   如何实现不重复？如何实现相对次序不变？</li></ol><p>使用栈的概念，记录栈中元素。</p><ol><li>怎么实现字典序最小呢？</li></ol><p>前提是顺序的时候字典序最小。遍历字符，来一个字符若为顺序，压入栈中；来一个字符时候如果逆序，看后面是否出现栈顶元素，若有，则弹出栈顶，一直到没有栈顶元素或小于栈顶元素或栈为空时候，然后压入该字符。直到遍历完所有字符。</p><p>题目难点：对于栈机制的使用，对于贪心策略很难想到。</p><hr><p>总结：数组所涉及的算法</p><p>快慢指针和左右指针，对于删除&#x2F;查找类型</p><p>前缀和数组，对于某区间内是sum</p><p>差分数组，对于某区间进行频繁的修改</p><p>旋转矩阵逆时针遍历</p><p>滑动窗口</p><p>查找重复的序列</p><p>二分搜索</p><p>随机返回</p><p>二分搜索的应用</p><p>田忌赛马</p><p>常数时间返回随机数</p><p>去重的返回字典序最小</p>]]></content>
    
    
    <categories>
      
      <category>刷题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>链表总结</title>
    <link href="/2023/07/05/%E5%88%B7%E9%A2%98/%E9%93%BE%E8%A1%A8/"/>
    <url>/2023/07/05/%E5%88%B7%E9%A2%98/%E9%93%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="链表题目总结"><a href="#链表题目总结" class="headerlink" title="链表题目总结"></a>链表题目总结</h1><h2 id="链表的连接："><a href="#链表的连接：" class="headerlink" title="链表的连接："></a>链表的连接：</h2><ul><li>有什么特点？</li></ul><p>    都是将链表进行重新连接，要么是不同链表的合并，要么是链表内部进行移动</p><ul><li>有什么解题手法么？</li></ul><p>    merge手法，通过对链表遍历，判断条件，然后连接到新链表。</p><p>    递归手法，对后面节点进行重复操作时候应该进行考虑</p><p>1、顺序链表的连接</p><p><a href="https://leetcode.cn/problems/merge-two-sorted-lists/">21. 合并两个有序链表 - 力扣（LeetCode）</a></p><p>题意：两个升序链表变成新的升序链表</p><p>思路：创建一个dummy node，双指针指向两条链表，进行merge过程</p><p>2、k个顺序链表的连接</p><p><a href="https://leetcode.cn/problems/merge-k-sorted-lists/">23. 合并 K 个升序链表 - 力扣（LeetCode）</a></p><p>题意：升序链表数组合并为一个升序链表</p><p>三件事情需要记住：</p><ul><li><p>比较器怎么定义？</p></li><li><p>q怎么定义？</p></li><li><p>push怎么push？</p></li></ul><p>思路：创建priority_queue，定义比较器，将所有node装入，不断弹出最小节点，并插入相应next节点，直至队列为空</p><p>3、链表的分解</p><p><a href="https://leetcode.cn/problems/partition-list/">86. 分隔链表 - 力扣（LeetCode）</a></p><p>题意：将大于x的放左边，小于的放右边</p><p>思路：创建两个node，然后遍历链表，分别在两个node上进行拼接</p><p>4、链表的反转</p><ul><li>k为一组的反转</li></ul><p>    思路：反转前k个node，然后连接后面的递归</p><ul><li>整个反转</li></ul><p>    思路：递归后n-1个node，接上第一个node</p><ul><li>前n个反转</li></ul><p>    </p><p>    思路：递归后n-1个node，然后接上后面的node</p><ul><li>m-n进行反转</li></ul><p>    思路：在m&#x3D;&#x3D;1时为base case，后面接递归</p><h2 id="链表的寻找遍历："><a href="#链表的寻找遍历：" class="headerlink" title="链表的寻找遍历："></a>链表的寻找遍历：</h2><ul><li>有什么特点？</li></ul><p>    寻找某特点的节点</p><ul><li>有什么手法？</li></ul><p>    设置快慢指针</p><p>1、链表的倒数第k个node</p><p>思路：fast遍历k次后slow开始一起遍历，fast为null时，slow为目标节点</p><p>2、链表的中点</p><p>思路：fast走两次，slow走一次</p><p>3、链表的是否有环</p><p>思路：fast走2次，slow走1次</p><p>4、链表入环节点</p><p>思路：fast走两次，slow走一次，然后fast从头和slow一起走一步，直到相等</p><p>5、链表的回文判断</p><p>思路：得到中间节点后，反转后面的节点，然后两边进行遍历比较</p>]]></content>
    
    
    <categories>
      
      <category>刷题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>如何搭建个人博客</title>
    <link href="/2023/07/03/%E6%95%99%E7%A8%8B/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/07/03/%E6%95%99%E7%A8%8B/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="如何搭建个人博客"><a href="#如何搭建个人博客" class="headerlink" title="如何搭建个人博客"></a>如何搭建个人博客</h1><p>搭建个人博客有手就行</p><p>看<a href="https://zhuanlan.zhihu.com/p/102592286">这篇文章</a>每个步骤都很详细</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
